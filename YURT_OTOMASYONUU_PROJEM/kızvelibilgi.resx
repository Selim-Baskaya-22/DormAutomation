<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADa
        BgAAAk1TRnQBSQFMAwEBAAEYAQABGAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABIAYAARAWAAMCAQMDCQEMAxIBGAMZASMDKgFAA0IBdgJJAU0BjgJJAU0BjgNDAXgCKwEs
        AUMDHAEnAxQBGwMMARADBAEG0AADHAEoAk0BXAGvAQ0BDwGfAfwBBAEHAa0B/wECAQYBsAH/AQIBBgGw
        Af8BBAEHAa0B/wENAQ8BnwH8Ak0BXQGwAxwBKNQAAzYBWQEZARsBlwH2AQcBCwG1Af8BBgEKAbUB/wEG
        AQoBtQH/AQYBCgG1Af8BBgEKAbUB/wEGAQoBtQH/AQYBCgG1Af8BBwELAbUB/wEZARsBlwH2AzYBWcwA
        AzABTAESARUBpwH8AQwBEAG5Af8BDQERAbkB/wFSAVUBxQH/AaUBpgHTAf8BygHLAdoB/wHKAcsB2gH/
        AaUBpgHTAf8BUgFVAcUB/wENAREBuQH/AQwBEAG5Af8BEgEVAacB/AMwAUzEAAMMARACMgGLAeoBEQEW
        Ab0B/wEWARsBvgH/AZ0BnwHTAf8D3QH/A90B/wPdAf8D3QH/A90B/wPdAf8BnQGeAdMB/wEWARoBvgH/
        AREBFgG9Af8CMgGLAeoDDAEQwAACQgFEAXcBFgEZAbwB/wEXARsBwQH/AYgBigHQAf8D3QH/As8B2wH/
        AWABYwHMAf8BIwEnAcMB/wEjAScBwwH/AWABYwHMAf8CzwHbAf8D3QH/AYgBiQHQAf8BFwEbAcEB/wEW
        ARkBvAH/AkIBRAF3wAACSwFuAcgBHAEhAcUB/wEtATEBxwH/AtkB3AH/AtsB3QH/AUUBSAHKAf8BHAEh
        AcUB/wEcASEBxQH/ARwBIQHFAf8BHAEhAcUB/wFFAUgBygH/AtsB3QH/AtkB3AH/AS0BMQHHAf8BHAEh
        AcUB/wJLAW4ByMAAAikBmwHzASIBJgHJAf8BXQFgAc8B/wPdAf8BrwGwAdgB/wEiASYByQH/ASIBJgHJ
        Af8BLAEwAcoB/wEsATABygH/ASIBJgHJAf8BIgEmAckB/wGvAbAB2AH/A90B/wFdAWABzwH/ASIBJgHJ
        Af8CKQGbAfPAAAEeASABrQH8AScBLAHMAf8BagFtAdIB/wPdAf8BogGjAdgB/wEnASwBzAH/AScBLAHM
        Af8BwAHBAdoB/wHAAcEB2gH/AScBLAHMAf8BJwEsAcwB/wGiAaMB1wH/A90B/wFqAW0B0gH/AScBLAHM
        Af8BHgEgAa0B/MAAATwBPQGJAeMBLQExAdAB/wFTAVcB0wH/A90B/wHLAcwB3AH/ATIBNgHQAf8BLQEx
        AdAB/wLRAdwB/wLRAdwB/wEtATEB0AH/ATIBNgHQAf8BywHMAdwB/wPdAf8BUwFWAdMB/wEtATEB0AH/
        ATwBPQGJAePAAAJNAVoBpwEyATYB0wH/ATMBOAHUAf8BwgHDAdwB/wPdAf8BmAGaAdkB/wEyATcB1AH/
        AtEB3AH/AtEB3AH/ATIBNwHUAf8BmAGZAdkB/wPdAf8BwgHDAdwB/wEzATgB1AH/ATIBNgHTAf8CTQFa
        AafAAAIrASwBQwEpASwBxAH/ATgBPAHYAf8BXAFfAdkB/wLXAd0B/wHEAcUB3AH/ATgBPAHYAf8B0QHS
        Ad0B/wHRAdIB3QH/ATgBPAHYAf8BwgHDAdwB/wLXAd0B/wFcAV8B2QH/ATgBPAHYAf8BKQEsAcQB/wIr
        ASwBQ8QAAk4BXgGvAT0BQgHXAf8BPQFCAdwB/wFOAVIB3AH/AUkBTQHcAf8BPQFCAdwB/wLQAd0B/wLQ
        Ad0B/wE9AUIB3AH/AUgBTAHcAf8BTgFSAdwB/wE9AUIB3AH/AT0BQgHXAf8CTgFeAa/IAAMMARACTAF2
        Ac8BSAFMAdsB/wFDAUgB3wH/AUMBSAHfAf8BQwFIAd8B/wFtAXAB3wH/AW0BcAHfAf8BQwFIAd8B/wFD
        AUgB3wH/AUMBSAHfAf8BSAFMAdsB/wJMAXYBzwMMARDMAAMLAQ8CTwFaAaYBSAFKAcwB/wFUAVkB4wH/
        AUgBTQHjAf8BSAFNAeMB/wFIAU0B4wH/AUgBTQHjAf8BVAFZAeMB/wFIAUoBzAH/Ak8BWgGmAwsBD9gA
        AyUBNwJOAVQBmwJVAYUB2wFMAU0BtAH6AUwBTQG0AfoCVQGFAdsCTgFUAZsDJQE30AABQgFNAT4HAAE+
        AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAYABAQYAAeABBwYAAcABAwYAAYABAUYAAYABAQYA
        AYABAQYAAcABAwYAAfABDwYACw==
</value>
  </data>
</root>